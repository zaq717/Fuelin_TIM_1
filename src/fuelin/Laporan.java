/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package fuelin;

import java.awt.print.PrinterException;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author binak
 */
public class Laporan extends javax.swing.JPanel {

    /**
     * Creates new form Dashboard
     */
    public Laporan() {
        try {
            UIManager.setLookAndFeel(new com.formdev.flatlaf.FlatLightLaf());
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        initComponents();
        tampilTabel();

    }

    public void tampilTabel() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Tanggal");
        model.addColumn("Keterangan");
        model.addColumn("Jumlah");
        model.addColumn("Harga");

        // Ambil nilai rentang waktu dari ComboBox
        String rentangWaktu = cbRentangWaktu.getSelectedItem().toString();

        // Menentukan query berdasarkan pilihan rentang waktu
        String sql = "";
        switch (rentangWaktu) {
            case "Hari ini":
                sql = "SELECT * FROM laporan WHERE tanggal = CURDATE()"; // Mengambil data hari ini
                break;
            case "Minggu ini":
                sql = "SELECT * FROM laporan WHERE WEEK(tanggal) = WEEK(CURDATE())"; // Mengambil data minggu ini
                break;
            case "Bulan ini":
                sql = "SELECT * FROM laporan WHERE MONTH(tanggal) = MONTH(CURDATE())"; // Mengambil data bulan ini
                break;
            default:
                sql = "SELECT * FROM laporan"; // Default: mengambil semua data
                break;
        }

        // Eksekusi query dan tampilkan hasilnya di tabel
        try {
            Connection conn = Koneksi.konek();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                String waktu = rs.getString("tanggal");
                String jenis = rs.getString("jenis");
                String jumlah = rs.getString("jumlah");
                String harga = rs.getString("harga");;
                Object[] baris = {waktu, jenis, jumlah, harga};
                model.addRow(baris);
            }
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, "Gagal Memuat Data");
        }

        // Set model ke tabel
        tbLaporan.setModel(model);
    }

    void exportToCSV(JTable tbLaporan1, String absolutePath) {
        JFileChooser chooser = new JFileChooser();
        chooser.setSelectedFile(new File("laporan.csv")); // default nama file

        int userSelection = chooser.showSaveDialog(null);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = chooser.getSelectedFile();

            try (FileWriter csv = new FileWriter(fileToSave)) {
                TableModel model = tbLaporan.getModel();

                // Tulis header kolom
                for (int i = 0; i < model.getColumnCount(); i++) {
                    csv.write(model.getColumnName(i));
                    if (i < model.getColumnCount() - 1) {
                        csv.write(",");
                    }
                }
                csv.write("\n");

                // Tulis isi baris
                for (int i = 0; i < model.getRowCount(); i++) {
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        Object value = model.getValueAt(i, j);
                        csv.write(value != null ? value.toString() : "");
                        if (j < model.getColumnCount() - 1) {
                            csv.write(",");
                        }
                    }
                    csv.write("\n");
                }

                JOptionPane.showMessageDialog(null, "Berhasil export ke CSV!");
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Gagal export: " + e.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbRentangWaktu = new javax.swing.JLabel();
        cbRentangWaktu = new javax.swing.JComboBox<>();
        pnExcel = new javax.swing.JPanel();
        btnExcel = new javax.swing.JLabel();
        pnPDF = new javax.swing.JPanel();
        btnPDF = new javax.swing.JLabel();
        pnPrint = new javax.swing.JPanel();
        btnPrint = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbLaporan = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        lbRentangWaktu.setText("Rentang Waktu   :");

        cbRentangWaktu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semua", "Hari ini", "Minggu ini", "Bulan ini" }));
        cbRentangWaktu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRentangWaktuActionPerformed(evt);
            }
        });

        btnExcel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnExcel.setText("Excel");
        btnExcel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnExcel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExcelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnExcelLayout = new javax.swing.GroupLayout(pnExcel);
        pnExcel.setLayout(pnExcelLayout);
        pnExcelLayout.setHorizontalGroup(
            pnExcelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnExcel, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
        );
        pnExcelLayout.setVerticalGroup(
            pnExcelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnExcel, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );

        btnPDF.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnPDF.setText("PDF");
        btnPDF.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnPDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPDFMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnPDFLayout = new javax.swing.GroupLayout(pnPDF);
        pnPDF.setLayout(pnPDFLayout);
        pnPDFLayout.setHorizontalGroup(
            pnPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnPDF, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );
        pnPDFLayout.setVerticalGroup(
            pnPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnPDF, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );

        btnPrint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnPrint.setText("Print");
        btnPrint.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnPrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPrintMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnPrintLayout = new javax.swing.GroupLayout(pnPrint);
        pnPrint.setLayout(pnPrintLayout);
        pnPrintLayout.setHorizontalGroup(
            pnPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );
        pnPrintLayout.setVerticalGroup(
            pnPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );

        tbLaporan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbLaporan);

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Cari");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lbRentangWaktu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbRentangWaktu, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(pnExcel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(pnPDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(pnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbRentangWaktu)
                    .addComponent(cbRentangWaktu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnExcel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnPDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tampilTabel();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbRentangWaktuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRentangWaktuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbRentangWaktuActionPerformed

    private void btnPrintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrintMouseClicked
        try {
            boolean printed = tbLaporan.print();
            if (printed) {
                JOptionPane.showMessageDialog(null, "Cetak berhasil.");
            } else {
                JOptionPane.showMessageDialog(null, "Cetak dibatalkan.");
            }
        } catch (PrinterException pe) {
            pe.printStackTrace();
            JOptionPane.showMessageDialog(null, "Gagal mencetak: " + pe.getMessage());
        }
    }//GEN-LAST:event_btnPrintMouseClicked

    private void btnExcelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExcelMouseClicked
        JFileChooser chooser = new JFileChooser();
        chooser.setSelectedFile(new File("laporan.csv"));
        if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            exportToCSV(tbLaporan, chooser.getSelectedFile().getAbsolutePath());
        }

    }//GEN-LAST:event_btnExcelMouseClicked

    private void btnPDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPDFMouseClicked
        try {
            boolean printed = tbLaporan.print(); // tabelLaporan = JTable
            if (printed) {
                JOptionPane.showMessageDialog(null, "Cetak berhasil.");
            } else {
                JOptionPane.showMessageDialog(null, "Cetak pdf dibatalkan.");
            }
        } catch (PrinterException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Gagal mencetak: " + e.getMessage());
        }
    }//GEN-LAST:event_btnPDFMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnExcel;
    private javax.swing.JLabel btnPDF;
    private javax.swing.JLabel btnPrint;
    private javax.swing.JComboBox<String> cbRentangWaktu;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbRentangWaktu;
    private javax.swing.JPanel pnExcel;
    private javax.swing.JPanel pnPDF;
    private javax.swing.JPanel pnPrint;
    private javax.swing.JTable tbLaporan;
    // End of variables declaration//GEN-END:variables
}
